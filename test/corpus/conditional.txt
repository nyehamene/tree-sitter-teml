==============================================
conditional - string
==============================================

(component foo []
	(foo {a: (cond f "A": "yes" "B": "no")}))

----------------------------------------------

(source_file
	(component_declaration
		name: (identifier)
		(properties)
		(template
			(element
				tag: (identifier)
				(children
					(attributes
						(attribute
							key: (identifier)
							value: (conditional
								target: (identifier)
								(option
									constant: (string)
									value: (string))
								(option
									constant: (string)
									value: (string))))))))))

==============================================
conditional - number
==============================================

(component foo []
	(foo {a: (cond f 0: "no" 1: "yes")}))

----------------------------------------------

(source_file
	(component_declaration
		name: (identifier)
		(properties)
		(template
			(element
				tag: (identifier)
				(children
					(attributes
						(attribute
							key: (identifier)
							value: (conditional
								target: (identifier)
								(option
									constant: (number)
									value: (string))
								(option
									constant: (number)
									value: (string))))))))))


==============================================
conditional - bool
==============================================

(component foo []
	(foo {a: (cond f false: "no" true: "yes")}))

----------------------------------------------

(source_file
	(component_declaration
		name: (identifier)
		(properties)
		(template
			(element
				tag: (identifier)
				(children
					(attributes
						(attribute
							key: (identifier)
							value: (conditional
								target: (identifier)
								(option
									constant: (bool)
									value: (string))
								(option
									constant: (bool)
									value: (string))))))))))

==============================================
conditional - comma separator
==============================================

(component foo []
	(foo {a: (cond f 1: "yes", 0: "no",)}))

----------------------------------------------

(source_file
	(component_declaration
		name: (identifier)
		(properties)
		(template
			(element
				tag: (identifier)
				(children
					(attributes
						(attribute
							key: (identifier)
							value: (conditional
								target: (identifier)
								(option
									constant: (number)
									value: (string))
								(option
									constant: (number)
									value: (string))))))))))

==============================================
conditional - element
==============================================

(component f []
	(cond f
		true: (div)
		false: (span)))

----------------------------------------------

(source_file
	(component_declaration
		name: (identifier)
		(properties)
		(template
			(conditional
				target: (identifier)
				(option constant: (bool)
					value: (element tag: (identifier)))
				(option constant: (bool)
					value: (element tag: (identifier)))))))

==============================================
conditional - string
==============================================

(component f []
	(cond f
		true: "line 1"
		false: "line 2"))

----------------------------------------------

(source_file
	(component_declaration
		name: (identifier)
		(properties)
		(template
			(conditional
				target: (identifier)
				(option constant: (bool) value: (string))
				(option constant: (bool) value: (string))))))

==============================================
conditional - string line
==============================================

(component f []
	(cond f
		true: -- line 1
		false: -- line 2
		))

----------------------------------------------

(source_file
	(component_declaration
		name: (identifier)
		(properties)
		(template
			(conditional
				target: (identifier)
				(option constant: (bool) value: (string))
				(option constant: (bool) value: (string))))))

==============================================
conditional - mixed (string, element)
==============================================

(component f []
	(cond f
		1: -- line 1
		0: (div)))

----------------------------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(conditional
				(identifier)
				(option (number) (string))
				(option (number) (element (identifier)))))))

==============================================
conditional - mixed (element, string)
==============================================

(component f []
	(cond f
		0: (div)
		1: -- line 1
		))

----------------------------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(conditional
				(identifier)
				(option (number) (element (identifier)))
				(option (number) (string))))))

==============================================
conditional - mixed (string, string line)
==============================================

(component f []
	(cond f
		0: "text"
		1: -- line 1
		))

----------------------------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(conditional
				(identifier)
				(option (number) (string))
				(option (number) (string))))))

==============================================
conditional - mixed (string line, string)
==============================================

(component f []
	(cond f
		1: -- line 1
		0: "text"
		))

----------------------------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(conditional
				(identifier)
				(option (number) (string))
				(option (number) (string))))))

==============================================
conditional - mixed (string line, string, element)
==============================================

(component f []
	(cond f
		1: -- line 1
		0: "text"
		2: (div)
		))

----------------------------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(conditional
				(identifier)
				(option (number) (string))
				(option (number) (string))
				(option (number) (element (identifier)))))))

==============================================
conditional - mixed (string, string line, element)
==============================================

(component f []
	(cond f
		0: "text"
		1: -- line 1 
		2: (div)
		))

----------------------------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(conditional
				(identifier)
				(option (number) (string))
				(option (number) (string))
				(option (number) (element (identifier)))))))

==============================================
conditional - nested
==============================================

(component f []
	(cond f
		true: (div
				(cond b
					false: (span)))))

----------------------------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(conditional
				(identifier)
				(option (bool)
					(element
						(identifier)
							(children
								(conditional
									(identifier)
									(option (bool)
										(element (identifier)))))))))))
