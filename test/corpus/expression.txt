===================
expression - bool
===================

(foo {a: true})

-------------------

(source_file
	(element
		(identifier)
		(attributes
			(attribute
				(identifier)
				(bool)))))

===================
expression - string
===================

(foo {a: "foo"})

-------------------

(source_file
	(element
		(identifier)
		(attributes
			(attribute
				(identifier)
				(string)))))

===================
expression - number
===================

(foo {a: 0
	  b: 10})

-------------------

(source_file
	(element
		(identifier)
		(attributes
			(attribute
				(identifier)
				(number))
			(attribute
				(identifier)
				(number)))))

===================
expression - call
===================

(foo {a: (a true "" 10 foo)})

-------------------

(source_file
	(element
		(identifier)
		(attributes
			(attribute
				(identifier)
				(call
					(identifier)
					(bool)
					(string)
					(number)
					(identifier))))))

===================
expression - call - comma
===================

(foo {a: (a true, "", 10, foo)})

-------------------

(source_file
	(element
		(identifier)
		(attributes
			(attribute
				(identifier)
				(call
					(identifier)
					(bool)
					(string)
					(number)
					(identifier))))))

===================
expression - call - operator
===================

(foo {a: (> a "")})

-------------------

(source_file
	(element
		(identifier)
		(attributes
			(attribute
				(identifier)
				(call
					(operator)
					(identifier)
					(string))))))

===================
expression - call - identifier
===================

(foo {a: (a)})

-------------------

(source_file
	(element
		(identifier)
		(attributes
			(attribute
				(identifier)
				(call
					(identifier))))))

===================
expression - call - property access
===================

(foo {a: (a.b)})

-------------------

(source_file
	(element
		name: (identifier)
		(attributes
			(attribute
				key: (identifier)
				value: (call
					func: (property_access
						object: (identifier)
						property: (identifier)))))))

===================
expression - call - namespaced identifier as func not allowed
:error
===================

(foo {a: (a/b)})

-------------------

===================
expression - call - bool (true) as func not allowed
:error
===================

(foo {a: (true)})

-------------------

===================
expression - call - bool (false) as func not allowed
:error
===================

(foo {a: (error)})

-------------------

===================
expression - call - string as func not allowed
:error
===================

(foo {a: ("")})

-------------------

===================
expression - call - number as func not allowed
:error
===================

(foo {a: (0)})

-------------------
