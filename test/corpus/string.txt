================================
template expression - identifier
================================

(component Foo [] "foo \(bar)")

--------------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(string
				(template_expression
					(identifier))))))

============================
template expression - bool
============================

(component Foo [] "foo \(true)" "foo \(false)")

----------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(string
				(template_expression
					(bool)))
			(string
				(template_expression
					(bool))))))

============================
template expression - conditional
============================

(component Foo [] "foo \((cond a 0: "yes" 1: "no"))")

----------------------------

(source_file
	(component_declaration
		name: (identifier)
		(properties)
		(template
			(string
				(template_expression
					(conditional
						target: (identifier)
						(option constant: (number) value: (string))
						(option constant: (number) value: (string))))))))

============================
template expression - string
============================

(component Foo [] "foo \("foo")")

----------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(string
				(template_expression
					(string))))))

============================
template expression - nested
============================

(component Foo [] "foo \("foo \("bar")")")

----------------------------

(source_file
	(component_declaration
		(identifier)
		(properties)
		(template
			(string
				(template_expression
					(string
						(template_expression
							(string))))))))

