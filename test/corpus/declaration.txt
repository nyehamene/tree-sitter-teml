======================
comment
======================

// a comment

----------------------

(source_file (comment))

======================
package declaration
======================

(package p "component/main")

----------------------

(source_file
	(package_declaration
		name: (identifier)
		path: (string)))

======================
package declaration: invalid name
:error
======================

(package p/a "path/to/package")

----------------------

======================
package declaraton: invalid path
:error
======================

(package p -- path/to/package
)

----------------------

======================
import declaration
======================

(import i "path/to/package")
(import i "path/to/package")

----------------------

(source_file
	(import_declaration
		name: (identifier)
		path: (string))
	(import_declaration
		name: (identifier)
		path: (string)))

======================
import declaration: invalid name
:error
======================

(import i/a "path/to/package")

----------------------

======================
import declaration: invalid path
:error
======================

(import i -- path/to/package
)

----------------------

======================
using declaration
======================

(import i "path/to/package")
(using s i)
(using [a b] i)
(using [a, b] i)
(using [a,] i)

----------------------

(source_file
	(import_declaration
		name: (identifier)
		path: (string))
	(using_declaration
		name: (identifier)
		from: (identifier))
	(using_declaration
		name: (identifier)
		name: (identifier)
		from: (identifier))
	(using_declaration
		name: (identifier)
		name: (identifier)
		from: (identifier))
	(using_declaration
		name: (identifier)
		from: (identifier)))

======================
using declaration: invalid name
:error
======================

(import i "path")
(using i/a i)

----------------------

======================
using declaration: invalid name
:error
======================

(import i "path")
(using [i/a] i)

----------------------

======================
using declaration: invalid name (from)
:error
======================

(import i "path")
(using a i/a)

----------------------

======================
component declaration
======================

(component fancy-button [])
(component fancy-button [a: A])
(component fancy-button [a: A, b: B])
(component fancy-button [a: A  b: B])
(component fancy-button [a: S/B])

----------------------

(source_file
	(component_declaration
		name: (identifier)
		(properties))
	(component_declaration
		name: (identifier)
		(properties
			(property name: (identifier) type: (identifier))))
	(component_declaration
		name: (identifier)
		(properties
			(property name: (identifier) type: (identifier))
			(property name: (identifier) type: (identifier))))
	(component_declaration
		name: (identifier)
		(properties
			(property name: (identifier) type: (identifier))
			(property name: (identifier) type: (identifier))))
	(component_declaration
		name: (identifier)
		(properties
			(property
				name: (identifier)
				type: (member_access
					object: (identifier)
					member: (identifier))))))

======================
component declaration: invalid name
:error
======================

(component foo/bar [])

----------------------

======================
component declaration: invalid property name
:error
======================

(component foo [a/b A])

----------------------

======================
document declaration: no name
======================

(document [])

----------------------

(source_file (document_declaration (properties)))

======================
document declaration: empty property list
======================

(document foo [])

----------------------

(source_file
	(document_declaration name: (identifier) (properties)))

======================
document declaration: property
======================

(document foo [a: A])

----------------------

(source_file
	(document_declaration
		name: (identifier)
		(properties
			(property name: (identifier) type: (identifier)))))

======================
document declaration: trailing comma
======================

(document foo [a: A,])

----------------------

(source_file
	(document_declaration
		name: (identifier)
		(properties
			(property name: (identifier) type: (identifier)))))

======================
document declaration: comma separator
======================

(document foo [a: A, b: B])

----------------------

(source_file
	(document_declaration
		name: (identifier)
		(properties
			(property name: (identifier) type: (identifier))
			(property name: (identifier) type: (identifier)))))

======================
document declaration: no comma b/w properties
======================

(document foo [a: A  b: B])

----------------------

(source_file
	(document_declaration
		name: (identifier)
		(properties
			(property name: (identifier) type: (identifier))
			(property name: (identifier) type: (identifier)))))

======================
document declaration: invalid name
:error
======================

(document foo/bar [])

----------------------

======================
document declaration: invalid property name
:error
======================

(document foo [a/b A])

----------------------

======================
document and component declaration order
======================

(document [])
(component bar [])
(component foo [])

----------------------

(source_file
    (document_declaration (properties))
	(component_declaration (identifier) (properties))
	(component_declaration (identifier) (properties)))

======================
document declaration: one per file
:error
======================

(document [])
(document [])

----------------------

======================
no component declaration before document
:error
======================

(component foo [])
(document [])

----------------------
